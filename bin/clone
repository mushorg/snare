#!/usr/bin/env python3

"""
Copyright (C) 2015-2016 MushMush Foundation

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
"""

import argparse
import asyncio
import os
import sys
from snare.utils import logger
from snare.cloner import Cloner
from snare.utils.snare_helpers import str_to_bool, print_color


def main():
    if os.getuid() != 0:
        print_color('Clone has to be run as root!', 'WARNING')
        sys.exit(1)
    if not os.path.exists('/opt/snare'):
        os.makedirs('/opt/snare')
    if not os.path.exists('/opt/snare/pages'):
        os.mkdir('/opt/snare/pages')
    loop = asyncio.get_event_loop()
    parser = argparse.ArgumentParser()
    parser.add_argument("--target", help="domain of the site to be cloned", required=True)
    parser.add_argument("--max-depth", help="max depth of the cloning", required=False, default=sys.maxsize)
    parser.add_argument("--log_path", help="path to the log file")
    parser.add_argument(
        "--css-validate", help="set whether css validation is required", type=str_to_bool, default=None
    )
    args = parser.parse_args()
    if args.log_path:
        log_file = args.log_path + "clone.log"
    else:
        log_file = "/opt/snare/clone.log"
    logger.Logger.create_clone_logger(log_file, __package__)
    print("Logs will be stored in {}\n".format(log_file))
    try:
        cloner = Cloner(args.target, int(args.max_depth), args.css_validate)
        loop.run_until_complete(cloner.get_root_host())
        loop.run_until_complete(cloner.run())
    except KeyboardInterrupt:
        pass


if __name__ == '__main__':
    print("""
    ______ __      ______ _   ____________
   / ____// /     / __  // | / / ____/ __ \\
  / /    / /     / / / //  |/ / __/ / /_/ /
 / /___ / /____ / /_/ // /|  / /___/ _, _/
/_____//______//_____//_/ |_/_____/_/ |_|

    """)
    main()
